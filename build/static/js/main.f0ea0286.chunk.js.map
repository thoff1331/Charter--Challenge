{"version":3,"sources":["components/pagination.js","App.js","reportWebVitals.js","index.js"],"names":["LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","push","Pagination","props","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","length","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","ceil","this","aria-label","className","map","index","href","onClick","aria-hidden","e","Component","App","onChangePage","data","allItems","offset","currentItems","slice","tableData","items","restaurant","name","address1","city","telephone","genre","attire","createHeader","row","toUpperCase","editSearchTerm","searchTerm","target","value","dynamicSearch","filter","includes","handleGenreChange","event","handleLocationChange","location","resetFilters","stateOptions","label","window","reload","fetch","headers","Authorization","then","res","json","totalItems","itemsOnPage","searched","sort","a","b","genreArray","startsWith","genreFiltered","locationArray","locationFiltered","bothFiltersActive","searchAndGenreActive","headerClass","join","trim","onChange","placeholder","id","abbr","filterOptions","concat","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0ea0286.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 10, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n\n    this.pageNeighbours =\n      typeof pageNeighbours === \"number\"\n        ? Math.max(0, Math.min(pageNeighbours, 2))\n        : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = (page) => {\n    const { onPageChanged = (f) => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords,\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  };\n\n  handleClick = (page, evt) => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  };\n\n  handleMoveLeft = (evt) => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n  };\n\n  handleMoveRight = (evt) => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n  };\n\n  fetchPageNumbers = () => {\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = this.pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      let pages = [];\n\n      const leftBound = currentPage - pageNeighbours;\n      const rightBound = currentPage + pageNeighbours;\n      const beforeLastPage = totalPages - 1;\n\n      const startPage = leftBound > 2 ? leftBound : 2;\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n\n      pages = range(startPage, endPage);\n\n      const pagesCount = pages.length;\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\n\n      const leftSpill = startPage > 2;\n      const rightSpill = endPage < beforeLastPage;\n\n      const leftSpillPage = LEFT_PAGE;\n      const rightSpillPage = RIGHT_PAGE;\n\n      if (leftSpill && !rightSpill) {\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\n        pages = [leftSpillPage, ...extraPages, ...pages];\n      } else if (!leftSpill && rightSpill) {\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\n        pages = [...pages, ...extraPages, rightSpillPage];\n      } else if (leftSpill && rightSpill) {\n        pages = [leftSpillPage, ...pages, rightSpillPage];\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  render() {\n    if (!this.totalRecords) return null;\n\n    if (this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Restaurants Pagination\">\n          <ul className=\"pagination\">\n            {pages.map((page, index) => {\n              if (page === LEFT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Previous\"\n                      onClick={this.handleMoveLeft}\n                    >\n                      <span aria-hidden=\"true\">&laquo;</span>\n                      <span className=\"sr-only\">Previous</span>\n                    </a>\n                  </li>\n                );\n\n              if (page === RIGHT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Next\"\n                      onClick={this.handleMoveRight}\n                    >\n                      <span aria-hidden=\"true\">&raquo;</span>\n                      <span className=\"sr-only\">Next</span>\n                    </a>\n                  </li>\n                );\n\n              return (\n                <li\n                  key={index}\n                  className={`page-item${\n                    currentPage === page ? \" active\" : \"\"\n                  }`}\n                >\n                  <a\n                    className=\"page-link\"\n                    href=\"#\"\n                    onClick={(e) => this.handleClick(page, e)}\n                  >\n                    {page}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </Fragment>\n    );\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func,\n};\n\nexport default Pagination;\n","import \"./App.css\";\nimport Pagination from \"./components/pagination\";\nimport stateOptions from \"./data/stateOPtions.json\";\nimport filterOptions from \"./data/filterOptions.json\";\nimport React from \"react\";\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      allItems: [],\n      currentItems: [],\n      currentPage: null,\n      totalPages: null,\n      searchTerm: \"\",\n      genre: null,\n      location: null,\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://code-challenge.spectrumtoolbox.com/api/restaurants\", {\n      headers: {\n        Authorization: \"Api-Key q3MNxtfep8Gt\",\n      },\n    })\n      .then((res) => res.json())\n      .then((allItems) => {\n        this.setState({\n          allItems,\n        });\n      });\n  }\n  onChangePage = (data) => {\n    const { allItems } = this.state;\n    const { currentPage, totalPages, pageLimit } = data;\n    const offset = (currentPage - 1) * pageLimit;\n    const currentItems = allItems.slice(offset, offset + pageLimit);\n\n    this.setState({ currentPage, currentItems, totalPages });\n  };\n  tableData = (items) => {\n    return items.map((restaurant, index) => {\n      return (\n        <tr key={index}>\n          <td>{restaurant.name}</td>\n          <td>{restaurant.address1}</td>\n          <td>{restaurant.city}</td>\n          <td>{restaurant.state}</td>\n          <td>{restaurant.telephone}</td>\n          <td>{restaurant.genre}</td>\n          <td>{restaurant.attire}</td>\n        </tr>\n      );\n    });\n  };\n  createHeader = () => {\n    let header = [\n      \"Name\",\n      \"Address\",\n      \"City\",\n      \"State\",\n      \"Phone Number\",\n      \"Genre\",\n      \"Attire\",\n    ];\n    return header.map((row, index) => {\n      return <th key={index}>{row.toUpperCase()}</th>;\n    });\n  };\n  editSearchTerm = (e) => {\n    this.setState({ searchTerm: e.target.value });\n  };\n  dynamicSearch = () => {\n    return this.state.allItems.filter(\n      (name) =>\n        name.includes(this.state.searchTerm) ||\n        name.city === this.state.searchTerm ||\n        name.genre.includes(this.state.searchTerm)\n    );\n  };\n  handleGenreChange = (event) => {\n    this.setState({ genre: event.target.value });\n  };\n\n  handleLocationChange = (event) => {\n    this.setState({ location: event.target.value });\n  };\n  resetFilters = () => {\n    this.setState({\n      location: stateOptions[0].label,\n      genre: null,\n    });\n    window.location.reload();\n  };\n  render() {\n    const {\n      allItems,\n      currentItems,\n      currentPage,\n      totalPages,\n      itemsOnPage,\n    } = this.state;\n    const totalItems = allItems.length;\n    const sortedItems = this.state.allItems.sort(function (a, b) {\n      if (a.name < b.name) {\n        return -1;\n      }\n      if (a.name > b.name) {\n        return 1;\n      }\n      return 0;\n    });\n    const searched = [];\n    const filteredRestaurants = allItems.map((restaurant) => {\n      if (\n        restaurant.name\n          .toUpperCase()\n          .includes(this.state.searchTerm.toUpperCase()) ||\n        restaurant.city.startsWith(this.state.searchTerm) ||\n        restaurant.genre.includes(this.state.searchTerm)\n      ) {\n        return searched.push(restaurant);\n      }\n    });\n    const genreArray = [];\n    const genreFiltered = allItems.map((restaurant) => {\n      if (restaurant.genre.includes(this.state.genre)) {\n        genreArray.push(restaurant);\n      }\n    });\n    const locationArray = [];\n    const locationFiltered = allItems.map((restaurant) => {\n      if (restaurant.state === this.state.location) {\n        locationArray.push(restaurant);\n      }\n    });\n    const bothFiltersActive = [];\n\n    const bothFilters = allItems.map((restaurant) => {\n      if (\n        restaurant.state === this.state.location &&\n        restaurant.genre.includes(this.state.genre) &&\n        restaurant.name.includes(this.state.searchTerm)\n      ) {\n        bothFiltersActive.push(restaurant);\n      }\n    });\n    const searchAndGenreActive = [];\n\n    const searchAndGenre = allItems.map((restaurant) => {\n      if (\n        restaurant.genre.includes(this.state.genre) &&\n        restaurant.name.includes(this.state.searchTerm)\n      ) {\n        searchAndGenreActive.push(restaurant);\n      }\n    });\n\n    if (totalItems === 0) return null;\n    const headerClass = [\n      \"text-dark py-2 pr-4 m-0\",\n      currentPage ? \"border-gray border-right\" : \"\",\n    ]\n      .join(\" \")\n      .trim();\n\n    return (\n      <div className=\"pageContainer\">\n        <div className=\"row d-flex flex-row py-5\">\n          <div className=\"w-100 px-4 py-5 d-flex flex-row flex-wrap align-items-center justify-content-between\">\n            <div className=\"d-flex flex-row py-4 align-items-center\"></div>\n          </div>\n          <h1 className=\"title\">Choose A Restaurant</h1>\n          <div className=\"restaurantCount\">\n            <h4 className={headerClass}>\n              <strong>{totalItems}</strong> Restaurants to Choose From\n            </h4>\n          </div>\n\n          <div className=\"search\">\n            <input\n              value={this.state.searchTerm}\n              onChange={this.editSearchTerm}\n              placeholder=\"Search by Name,City, or Genre\"\n            />\n          </div>\n          <div className=\"filter-form\">\n            <div className=\"filters\">\n              <label>Select A State </label>\n              <select\n                value={this.state.location || \"\"}\n                name={this.state.location}\n                id={this.state.location}\n                onChange={this.handleLocationChange}\n              >\n                {stateOptions.map((abbr, index) => {\n                  return <option value={abbr.value}>{abbr.value}</option>;\n                })}\n              </select>\n              <h3 className=\"resetFilters\" onClick={this.resetFilters}>\n                Reset Filters\n              </h3>\n              <label>Select a Genre</label>\n              <select\n                value={this.state.genre || \"\"}\n                name={this.state.genre}\n                id={this.state.genre}\n                onChange={this.handleGenreChange}\n              >\n                {filterOptions\n                  .sort(function (a, b) {\n                    if (a.label < b.label) {\n                      return -1;\n                    }\n                    if (a.label > b.label) {\n                      return 1;\n                    }\n                    return 0;\n                  })\n                  .map((genre, index) => {\n                    return (\n                      <option key={index} value={genre.value}>\n                        {genre.value}\n                      </option>\n                    );\n                  })}\n              </select>\n            </div>\n          </div>\n          <div className=\"filter\">\n            <table id=\"myTable\" className=\"restaurants\">\n              <tbody>\n                <tr>{this.createHeader()}</tr>\n                {this.state.location != null && this.state.genre != null\n                  ? this.tableData(bothFiltersActive)\n                  : this.state.genre != null && this.state.searchTerm != \"\"\n                  ? this.tableData(searchAndGenreActive)\n                  : this.state.searchTerm === \"\" &&\n                    this.state.location === null &&\n                    this.state.genre === null\n                  ? this.tableData(currentItems)\n                  : this.state.location != null\n                  ? this.tableData(locationArray)\n                  : this.state.genre != null\n                  ? this.tableData(genreArray)\n                  : this.state.location != null &&\n                    this.state.genre != null &&\n                    this.state.searchTerm === \"\"\n                  ? this.tableData(\n                      searched.concat(genreFiltered, locationFiltered)\n                    )\n                  : this.tableData(searched)}\n              </tbody>\n            </table>\n          </div>\n          <Pagination\n            totalRecords={totalItems}\n            pageLimit={10}\n            pageNeighbours={1}\n            onPageChanged={this.onChangePage}\n          />\n          {currentPage && (\n            <span className=\"currentPage\">\n              Page <span className=\"font-weight-bold\">{currentPage}</span> /{\" \"}\n              <span className=\"font-weight-bold\">{totalPages}</span>\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}