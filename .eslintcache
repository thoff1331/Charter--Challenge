[{"/Users/trevorhoffman/Desktop/react_projects/charter/src/index.js":"1","/Users/trevorhoffman/Desktop/react_projects/charter/src/components/pagination.js":"2","/Users/trevorhoffman/Desktop/react_projects/charter/src/reportWebVitals.js":"3","/Users/trevorhoffman/Desktop/react_projects/charter/src/Table.js":"4"},{"size":506,"mtime":1606783276410,"results":"5","hashOfConfig":"6"},{"size":5295,"mtime":1606267092501,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1606175929882,"results":"8","hashOfConfig":"6"},{"size":8435,"mtime":1606783459807,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o7ga3a",{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/trevorhoffman/Desktop/react_projects/charter/src/index.js",[],"/Users/trevorhoffman/Desktop/react_projects/charter/src/components/pagination.js",["19","20","21"],"import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 10, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n\n    this.pageNeighbours =\n      typeof pageNeighbours === \"number\"\n        ? Math.max(0, Math.min(pageNeighbours, 2))\n        : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = (page) => {\n    const { onPageChanged = (f) => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords,\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  };\n\n  handleClick = (page, evt) => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  };\n\n  handleMoveLeft = (evt) => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n  };\n\n  handleMoveRight = (evt) => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n  };\n\n  fetchPageNumbers = () => {\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = this.pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      let pages = [];\n\n      const leftBound = currentPage - pageNeighbours;\n      const rightBound = currentPage + pageNeighbours;\n      const beforeLastPage = totalPages - 1;\n\n      const startPage = leftBound > 2 ? leftBound : 2;\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n\n      pages = range(startPage, endPage);\n\n      const pagesCount = pages.length;\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\n\n      const leftSpill = startPage > 2;\n      const rightSpill = endPage < beforeLastPage;\n\n      const leftSpillPage = LEFT_PAGE;\n      const rightSpillPage = RIGHT_PAGE;\n\n      if (leftSpill && !rightSpill) {\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\n        pages = [leftSpillPage, ...extraPages, ...pages];\n      } else if (!leftSpill && rightSpill) {\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\n        pages = [...pages, ...extraPages, rightSpillPage];\n      } else if (leftSpill && rightSpill) {\n        pages = [leftSpillPage, ...pages, rightSpillPage];\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  render() {\n    if (!this.totalRecords) return null;\n\n    if (this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Restaurants Pagination\">\n          <ul className=\"pagination\">\n            {pages.map((page, index) => {\n              if (page === LEFT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Previous\"\n                      onClick={this.handleMoveLeft}\n                    >\n                      <span aria-hidden=\"true\">&laquo;</span>\n                      <span className=\"sr-only\">Previous</span>\n                    </a>\n                  </li>\n                );\n\n              if (page === RIGHT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Next\"\n                      onClick={this.handleMoveRight}\n                    >\n                      <span aria-hidden=\"true\">&raquo;</span>\n                      <span className=\"sr-only\">Next</span>\n                    </a>\n                  </li>\n                );\n\n              return (\n                <li\n                  key={index}\n                  className={`page-item${\n                    currentPage === page ? \" active\" : \"\"\n                  }`}\n                >\n                  <a\n                    className=\"page-link\"\n                    href=\"#\"\n                    onClick={(e) => this.handleClick(page, e)}\n                  >\n                    {page}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </Fragment>\n    );\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func,\n};\n\nexport default Pagination;\n","/Users/trevorhoffman/Desktop/react_projects/charter/src/reportWebVitals.js",[],"/Users/trevorhoffman/Desktop/react_projects/charter/src/Table.js",["22","23","24","25","26","27","28","29","30","31","32"],{"ruleId":"33","severity":1,"message":"34","line":132,"column":21,"nodeType":"35","endLine":137,"endColumn":22},{"ruleId":"33","severity":1,"message":"34","line":147,"column":21,"nodeType":"35","endLine":152,"endColumn":22},{"ruleId":"33","severity":1,"message":"34","line":166,"column":19,"nodeType":"35","endLine":170,"endColumn":20},{"ruleId":"36","severity":1,"message":"37","line":101,"column":7,"nodeType":"38","messageId":"39","endLine":101,"endColumn":18},{"ruleId":"36","severity":1,"message":"40","line":104,"column":11,"nodeType":"38","messageId":"39","endLine":104,"endColumn":22},{"ruleId":"36","severity":1,"message":"41","line":114,"column":11,"nodeType":"38","messageId":"39","endLine":114,"endColumn":30},{"ruleId":"42","severity":1,"message":"43","line":114,"column":59,"nodeType":"44","messageId":"45","endLine":114,"endColumn":61},{"ruleId":"42","severity":1,"message":"46","line":126,"column":53,"nodeType":"44","messageId":"47","endLine":126,"endColumn":55},{"ruleId":"42","severity":1,"message":"46","line":132,"column":56,"nodeType":"44","messageId":"47","endLine":132,"endColumn":58},{"ruleId":"36","severity":1,"message":"48","line":139,"column":11,"nodeType":"38","messageId":"39","endLine":139,"endColumn":22},{"ruleId":"42","severity":1,"message":"46","line":139,"column":51,"nodeType":"44","messageId":"47","endLine":139,"endColumn":53},{"ruleId":"36","severity":1,"message":"49","line":150,"column":11,"nodeType":"38","messageId":"39","endLine":150,"endColumn":25},{"ruleId":"42","severity":1,"message":"46","line":150,"column":54,"nodeType":"44","messageId":"47","endLine":150,"endColumn":56},{"ruleId":"50","severity":1,"message":"51","line":236,"column":71,"nodeType":"52","messageId":"53","endLine":236,"endColumn":73},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'itemsOnPage' is assigned a value but never used.","Identifier","unusedVar","'sortedItems' is assigned a value but never used.","'filteredRestaurants' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","'bothFilters' is assigned a value but never used.","'searchAndGenre' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]